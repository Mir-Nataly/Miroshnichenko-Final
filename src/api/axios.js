import axios from "axios";

export default axios.create({
    baseURL: 'http://localhost:3000'
});




/* Постаралась исправить все, кроме запросов, так как необходимо полностью переписать структуру запросов, 
что в условиях ограниченного времени, качественно сделать не успею, но при этом сломаю работающую 
страницу регистрации, тем более, что тема запросов в курсе отстствует. Надеюсь, что на минимальный проходной 
балл хватит, а сам проект собираюсь доделывать в процессе более спокойного прохождения обучения, чем это 
позволяет проект Цифовые профессии. */





/* Наталья, Добрый день! Даю обратную связь по Вашей работе:
Понравилось в работе:
1)регистрация работает корректно, отлично, что обработали ошибку,
 но хорошей практикой считается показывать оишбку, которая приходит
 с сервера https://skr.sh/sKmxbYF2Rsd?a, потому у сервера больше
 инофрмации о пользователе, так как сервер работает с базой данных. 
Отлично, что сделали валидацию <<https://skr.sh/sKmUdWxrTBp?a>>, 
но верстка начинает прагыть, когда появляются подсказки, поэтому 
рекоендую использовать position: absolute, при использовании 
данного свойства элемент вырывается из всего потока эелементом 
и другие элеенты не реаирует на него, и при появлении подсказок
 верстка не будет ломаться. При попытке войти или оставить кражу,
 появилсся баг 
https://skr.sh/vKmliXU5Bmh?a https://skr.sh/sKmbOD7Q3sU?a 
на видео видно, что нажатие на кнопку происходит, так как 
выводится сообщение в логи, но запроса на сервер нет.
https://skr.sh/sKm3Ds8qL5z?a также вся верстка ломается при 
изменении высоты экрана.
2)https://skr.sh/sKmbWOG7QTM?a так как роуты могут добавлять 
при расширении проекта, рекомендую использовать следующий подход
const routes = [
  { path: "/", element: <HomePage /> },
  { path: "/about", element: <AboutUsPage /> },
  { path: "/contacts", element: <ContactsPage /> },
  { path: "/login", element: <LoginPage /> },
  { path: "/register", element: <RegisterPage /> },
  { path: "/report", element: <ReportPage /> },
  { path: "*", element: <NotFoundPage /> },
];
 <Routes>
      {routes.map((route, index) => (
        <Route key={index} path={route.path} element={route.element} />
      ))}
    </Routes>
Тем самым, если у нас появится новый роут, мы просто добавим его 
в массив и он автоматически отобразится.
3)https://skr.sh/sKm8zdozNDr?a рекомендую использовать 
контролируемые элементы, так как они позволяют легче управлять 
состоянием полей ввода, получать текущие значения и выполнять 
дополнительную валидацию или манипуляции с данными перед их 
использованием. Вот пример
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');

  const handleEmailChange = (e) => {
    setEmail(e.target.value);
  };

  const handlePasswordChange = (e) => {
    setPassword(e.target.value);
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    // Ваша логика обработки отправки формы
  };

  return (
    <div className="wrapper_for_login_form">
        <input
          className="input_login"
          name="email"
          type="email"
          placeholder="введите почтовый ящик"
          value={email}
          onChange={handleEmailChange}
        />
        <input
          className="input_login"
          name="password"
          type="password"
          placeholder="введите пароль"
          value={password}
          onChange={handlePasswordChange}
        />
    </div>
Мы использовали хук useState для создания состояния email и 
password, которые будут отражать значения полей ввода. Затем 
мы добавили обработчики событий handleEmailChange и 
handlePasswordChange, которые обновляют соответствующие значения 
состояния при изменении полей ввода. Теперь значения полей ввода 
связаны с состоянием и будут автоматически обновляться при вводе 
пользователем. Вы также можете использовать эти значения при 
отправке формы или выполнении других операций.
3)https://skr.sh/sKm30ay4NjW?a для более удобной навигации по 
файлам и папкам рекомендуется разметисть данные элементы в 
отдельные папки.
Так как основной функционал с запросами на сервер не выполнен 
и страница у нас статическая, за исключение регистрации придеться

 снизить баллы.
Удачи в дальнейшем обучении).
Работу проверил ментор Алексей Кропотин.
В случае возникновения вопросов обращайтесь, пожалуйста, в канал 
по разделу #react_js_фреймворки. */